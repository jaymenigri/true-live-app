// utils/domainClassifier.js
const { OpenAI } = require('openai');
require('dotenv').config();

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

/**
 * Classifica se uma pergunta est√° dentro do dom√≠nio de Israel/juda√≠smo/geopol√≠tica
 * Considera o contexto da conversa quando fornecido
 * @param {string} query - Pergunta do usu√°rio ou pergunta com contexto
 * @returns {Promise<boolean>} - True se dentro do dom√≠nio
 */
async function classificar(query) {
  try {
    console.log(`üîç Classificando pergunta: "${query.substring(0, 100)}${query.length > 100 ? '...' : ''}"`);
    
    // Se query cont√©m hist√≥rico estruturado (formato "CONVERSA ANTERIOR:"), use prompt especial
    const isContextualized = query.includes("CONVERSA ANTERIOR:");
    
    const systemPrompt = isContextualized
      ? `Voc√™ √© um classificador que determina se perguntas est√£o relacionadas a Israel, juda√≠smo, cultura judaica, geopol√≠tica do Oriente M√©dio, l√≠deres israelenses ou hist√≥ria judaica.

IMPORTANTE: Voc√™ est√° analisando uma conversa em contexto. Se a pergunta atual se refere a algo mencionado anteriormente sobre Israel ou juda√≠smo, classifique como DENTRO do dom√≠nio.

Responda apenas com "true" se estiver dentro do dom√≠nio ou "false" se n√£o estiver.`
      : `Voc√™ √© um classificador que determina se perguntas est√£o relacionadas a Israel, juda√≠smo, cultura judaica, geopol√≠tica do Oriente M√©dio, l√≠deres israelenses ou hist√≥ria judaica.

Crit√©rios para classificar como DENTRO do dom√≠nio:
- Perguntas sobre Israel, seu povo, hist√≥ria, pol√≠tica, economia ou sociedade
- Perguntas sobre juda√≠smo, cultura judaica, festas judaicas, tradi√ß√µes
- Perguntas sobre conflitos no Oriente M√©dio envolvendo Israel
- Perguntas sobre l√≠deres israelenses (pol√≠ticos, religiosos, militares)
- Perguntas sobre antissemitismo ou quest√µes relacionadas
- Perguntas sobre sionismo ou movimentos relacionados

Responda apenas com "true" se estiver dentro do dom√≠nio ou "false" se n√£o estiver.`;

    const response = await openai.chat.completions.create({
      model: "gpt-4-turbo",
      messages: [
        {
          role: "system",
          content: systemPrompt
        },
        {
          role: "user",
          content: query
        }
      ],
      temperature: 0.1,
      max_tokens: 10
    });

    const resultado = response.choices[0].message.content.trim().toLowerCase();
    const estaNoDominio = resultado === "true";
    
    console.log(`üìä Classifica√ß√£o: ${estaNoDominio ? 'Dentro do dom√≠nio' : 'Fora do dom√≠nio'}`);
    return estaNoDominio;
  } catch (error) {
    console.error('‚ùå Erro ao classificar pergunta:', error);
    // Em caso de erro, assume que est√° no dom√≠nio para evitar frustra√ß√£o do usu√°rio
    return true;
  }
}

module.exports = { classificar };
